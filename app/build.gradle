/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // springboot
    implementation 'org.springframework.boot:spring-boot-starter'


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    //jackson csv
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'

    // java faker
    implementation 'com.github.javafaker:javafaker:1.0.2'

    // jackson jsr : LocalDateTime type converting
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // springboot-test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }

}

application {
    // Define the main class for the application.
    mainClass = 'com.programmers.order.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
